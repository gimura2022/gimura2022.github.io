.Dd $Mdocdate$
.Dt cstyle 7
.Os
.
.Sh NAME
.Nm cstyle
.Nd my C code style
.
.Sh DESCRIPTION
My code style based on linux kernel code style
but I changed some things in it for me.
.
.Ss Indetation
I indent my code by 8 spaces.
Lines should be shorter than 110 charcters.
.
.Ss Comments
I never use "//", instead I use "/* comment */", for example:
.Bd -literal -offset indent
/* some multiline
 * comment */
.Ed
.Pp
In code I comment every defention at top level.
.
.Ss Backets on line/after line
In function defentions I write backets after line
but on other cases I write backets on line with space.
.
.Ss Switch cases
Cases should be writing at switch level, for example:
.Bd -literal -offset indent
switch (c) {
case 'a':
	...
	break;

case 'b':
	...
	break;

case 'c':
	...
	break;
};
.Ed
.
.Ss Project strucure
All my projects should have main source file (for example "some_utility.c"),
LICENSE file with license, Makefile for compiling and installing project,
manpage file (for example "some_utility.1") and README file.
.
.Ss Nameing conventions
For variables, functions, structures, enums, files and macro functions I use snake_case name
but typedefs have ending "_t" and function pointer typedef have "_f" ending.
For enum fields and macro constants I use upper snake case:
.Bd -literal -offset indent
void* PascalCaseName; /* incorrect */
void* snake_case_name; /* correct */

#define SOME_MACRO(x) ... /* incorrect */
#define some_macro(x) ... /* correct */

typedef int integer; /* incorrect */
typedef int integer_t; /* correct */

typedef void (*handler)(void); /* incorrect */
typedef void (*handler_f)(void); /* correct */

enum {
	enum_value, /* incorrect */
	ENUM_VALUE, /* correct */
};
.Ed
.
.Ss Pointer type
I write "*" in pointers without spaces at left and with one space at right,
if I not define more one pointer variable in this line I write "*" at right.
.Bd -literal -offset indent
void *ptr; /* incorrect */
void* ptr; /* correct */

void* a,* b,* c; /* incorrect */
void *a, *b, *c; /* correct */
.Ed
.
.Ss Headers shielding
For Headers shielding I use something like this:
.Bd -literal -offset indent
#ifndef _header_name_h
#define _header_name_h

...

#endif
.Ed
According to my nameing conventions
I should write "#ifndef _HEADER_NAME_H" and "#define _HEADER_NAME_H"
but I'm writing this lower case out of tradition.
.
.Sh NOTES
Not all my projects satisfy this code style,
but I try write new projects following this code style.
.
.Sh AUTHORS
.An gimura2022 Aq Mt gimura0001@gmail.com
.
.Sh SEE ALSO
.Lk https://www.kernel.org/doc/html/v4.10/process/coding-style.html linux code style
